/**
 * Copyright 2015 Solinea, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*global sinon, todo, chai, describe, it, calledOnce*/
//integration tests - serviceStatusView.js

describe('apiPerfReportView.js spec', function() {
    beforeEach(function() {
        $('body').html('<div class="testContainer"></div>');

        var dData = {
            "count": 163,
            "next": "http://localhost:8000/core/api-calls/?%40timestamp__range=%7B%22gte%22%3A1460414917927%2C%22lte%22%3A1460415817927%7D&component=nova&interval=15s&page=2",
            "previous": null,
            "results": [{
                "sort": [1460415782631],
                "_type": "api_stats",
                "_source": {
                    "creation_time": "2016-04-11T23:03:02.631Z",
                    "client_ip": "172.24.4.1",
                    "protocol": "1.1",
                    "@version": "1",
                    "@timestamp": "2016-04-11T23:03:02.631Z",
                    "component": "nova",
                    "uri": "/v2/54bc14b3933e4aec9632d18359c02776/os-hypervisors/statistics",
                    "method": "GET",
                    "host": "rdo-kilo",
                    "response_status": "200",
                    "received_at": "2016-04-11T23:03:00.203Z",
                    "response_length": "454",
                    "type": "api_stats",
                    "port": 50865,
                    "response_time": "0.0459509"
                },
                "_score": null,
                "_index": "api_stats-2016.04.11",
                "_id": "AVQHkFWalBIZaHEsp7Uw"
            }],
            "aggregations": {
                "all_status": {
                    "buckets": [{
                        "key": 200,
                        "doc_count": 160
                    }, {
                        "key": 401,
                        "doc_count": 2
                    }, {
                        "key": 204,
                        "doc_count": 1
                    }, {
                        "key": 201,
                        "doc_count": 0
                    }, {
                        "key": 202,
                        "doc_count": 0
                    }, {
                        "key": 300,
                        "doc_count": 0
                    }, {
                        "key": 403,
                        "doc_count": 0
                    }, {
                        "key": 404,
                        "doc_count": 0
                    }, {
                        "key": 500,
                        "doc_count": 0
                    }],
                    "sum_other_doc_count": 0,
                    "doc_count_error_upper_bound": 0
                },
                "per_interval": {
                    "buckets": [{
                        "response_ranges": {
                            "buckets": {
                                "500.0-599.0": {
                                    "to": 599.0,
                                    "from_as_string": "500.0",
                                    "from": 500.0,
                                    "to_as_string": "599.0",
                                    "doc_count": 0
                                },
                                "400.0-499.0": {
                                    "to": 499.0,
                                    "from_as_string": "400.0",
                                    "from": 400.0,
                                    "to_as_string": "499.0",
                                    "doc_count": 0
                                },
                                "300.0-399.0": {
                                    "to": 399.0,
                                    "from_as_string": "300.0",
                                    "from": 300.0,
                                    "to_as_string": "399.0",
                                    "doc_count": 0
                                },
                                "200.0-299.0": {
                                    "to": 299.0,
                                    "from_as_string": "200.0",
                                    "from": 200.0,
                                    "to_as_string": "299.0",
                                    "doc_count": 0
                                }
                            }
                        },
                        "statistics": {
                            "count": 0,
                            "max": null,
                            "sum": null,
                            "avg": null,
                            "min": null
                        },
                        "key_as_string": "2016-04-11T22:48:30.000Z",
                        "key": 1460414910000,
                        "doc_count": 0
                    }]
                }
            }
        };

        // to answer GET requests
        this.server = sinon.fakeServer.create();
        this.server.respondWith("GET", "", [200, {
            "Content-Type": "application/json"
        }, JSON.stringify(dData)]);

        // confirm that dom is clear of view elements before each test:
        expect($('svg').length).to.equal(0);
        expect($('#spinner').length).to.equal(0);

        goldstone.globalLookbackRefreshSelectors = new GlobalLookbackRefreshButtonsView({});

        this.testView = new ApiPerfReportPageView({
            el: '.testContainer',
        });
    });
    afterEach(function() {
        $('body').html('');
        // this.server.respond();
        this.server.restore();
    });
    describe('view is constructed', function() {
        it('should exist', function() {
            assert.isDefined(this.testView, 'this.testView has been defined');
            expect(this.testView).to.be.an('object');
            expect(this.testView.el).to.equal('.testContainer');
        });
        // it('view responds to global selector changes', function() {
        //     this.getGlobalLookbackRefresh_spy = sinon.spy(this.testView, "getGlobalLookbackRefresh");
        //     expect(this.getGlobalLookbackRefresh_spy.callCount).to.equal(0);
        //
        //     goldstone.globalLookbackRefreshSelectors.trigger('globalLookbackChange');
        //     expect(this.getGlobalLookbackRefresh_spy.callCount).to.equal(1);
        //
        //     goldstone.globalLookbackRefreshSelectors.trigger('globalRefreshChange');
        //     expect(this.getGlobalLookbackRefresh_spy.callCount).to.equal(2);
        //
        //     $('#global-refresh-range').val('-1');
        //     this.testView.getGlobalLookbackRefresh();
        //     this.testView.scheduleInterval();
        //     expect(this.getGlobalLookbackRefresh_spy.callCount).to.equal(3);
        //
        //     this.getGlobalLookbackRefresh_spy.restore();
        // });
    });

});
